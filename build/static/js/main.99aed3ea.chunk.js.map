{"version":3,"sources":["DataContext.js","Parameter.js","Chart.js","Zones.js","DateRange.js","Form.js","App.js","index.js"],"names":["DataContext","React","createContext","withDataContext","Component","props","Consumer","context","options","label","value","handleChange","parameter","setKeyValue","Group","controlId","Label","this","onChange","setSeries","data","zones","dateRange","map","zone","name","filter","item","code","moment","date","startDate","endDate","Number","i","arr","findIndex","el","Date","param","find","title","text","chart","width","height","chartHeight","yAxis","xAxis","type","plotOptions","series","marker","enabled","credits","tooltip","backgroundColor","color","legend","itemStyle","itemHoverStyle","highcharts","Highcharts","setConfig","entry","nom","sort","split","getOptions","isMulti","isClearable","state","focusedInput","handleFocus","setState","dates","Set","isNaN","minDate","size","Math","min","startOf","maxDate","max","endOf","maxRange","getMaxRange","startDateId","endDateId","onDatesChange","onFocusChange","isOutsideRange","Form","Row","Col","md","App","divChart","createRef","key","fetch","res","json","current","getBoundingClientRect","fetchData","Provider","Container","fluid","className","ref","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99aed3ea.chunk.js","sourcesContent":["import React from \"react\"\n\nconst DataContext = React.createContext()\n\nexport default DataContext\n\nexport const withDataContext = Component => props => (\n    <DataContext.Consumer>\n        { context => <Component { ...context }/> }\n    </DataContext.Consumer>\n)","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport Select from \"react-select\"\n\nexport const options = [{\n    label : \"Nombre de cas confirmés\",\n    value : \"casConfirmes\"\n}, {\n    label : \"Nombre d'hospitalisations'\",\n    value : \"hospitalises\"\n}, {\n    label : \"Nombre de décès\",\n    value : \"deces\"\n}]\n\nexport default withDataContext(class Parameter extends React.Component {\n\n    handleChange = parameter => this.props.setKeyValue(\"parameter\", parameter)\n\n    render() {\n        return (\n            <Form.Group controlId=\"parameter\">\n                <Form.Label>Paramètre</Form.Label>\n                <Select\n                    value={ this.props.parameter }\n                    options={ options }\n                    onChange={ this.handleChange }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport { withDataContext } from \"./DataContext\"\nimport { options } from \"./Parameter\"\nimport moment from \"moment\"\n\nexport default withDataContext(class Chart extends React.Component {\n\n    setSeries = () => {\n        const { data, zones, dateRange, parameter } = this.props\n        \n        return zones?.map(zone => {            \n            return {\n                name :  zone?.label,\n                data : data\n                        .filter(item => item.code === zone?.value)\n                        .filter(item => moment(item.date) >= dateRange?.startDate)\n                        .filter(item => moment(item.date) <= dateRange?.endDate)\n                        .filter(item => Number(item[parameter?.value]))\n                        .filter((item, i, arr) => arr.findIndex(el => el.date === item.date) === i)\n                        .map(item => [\n                            Number(new Date(item.date)),\n                            Number(item[parameter?.value])\n                        ])\n            }\n        })\n    }\n\n    setConfig() {\n\n        const param = options.find(({ value }) => value === this.props.parameter?.value)?.label\n\n        return {\n            title: { text: \"\" },\n            chart: { width : null, height : this.props.chartHeight },\n            yAxis: {\n                title: { text: param }\n            },\n            xAxis: {\n                type: 'datetime'\n            },\n            plotOptions: {\n                series: {\n                    marker: {\n                        enabled: true\n                    }\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            tooltip: {\n                backgroundColor: '#2a2a2b',\n                color:\"#bbb\"\n            },\n            legend: {\n                itemStyle: {\n                    color: '#bbb'\n                },\n                itemHoverStyle:{\n                    color: '#fff'\n                }\n            },\n            series: this.setSeries()\n        }\n    }\n\n    render() {\n        return (\n            <HighchartsReact\n                highcharts={ Highcharts }\n                options={ this.setConfig() }\n                { ...this.props }\n            />\n        )\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport Select from \"react-select\"\n\nexport default withDataContext(class Zones extends React.Component {\n\n    handleChange = zones => this.props.setKeyValue(\"zones\", zones)\n\n    getOptions() {\n        const { data } = this.props\n        const sep = \" - \"\n        const arrayUnique = data\n            .filter((entry, i, arr) => arr.findIndex(el => el.nom === entry.nom) === i)\n            .map(entry => entry.nom + sep + entry.code)\n        \n        return arrayUnique.sort().map(zone => {\n            const [label, value] = zone.split(sep)\n            return { label, value }\n        })\n    }\n\n    render() {\n\n        return (\n            <Form.Group controlId=\"zone\">\n                <Form.Label>Zones</Form.Label>\n                <Select\n                    options={ this.getOptions() }\n                    value={ this.props.zones }\n                    onChange={ this.handleChange }\n                    isMulti\n                    isClearable={ false }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport { DateRangePicker } from \"react-dates\"\nimport moment from \"moment\"\n\nexport default withDataContext(class DateRange extends React.Component {\n\n    state = { focusedInput : null }\n\n    handleChange = dateRange => this.props.setKeyValue(\"dateRange\", dateRange)\n\n    handleFocus = focusedInput => this.setState({ focusedInput })\n\n    getMaxRange() {\n\n        const { data } = this.props\n\n        const dates = new Set(data\n            .map(entry => Number(new Date(entry.date)))\n            .filter(date => !isNaN(date))\n        )\n        \n        return {\n            minDate : moment(dates.size ? Math.min(...dates) : null).startOf(\"day\"),\n            maxDate : moment(dates.size ? Math.max(...dates) : null).endOf(\"day\")\n        }\n    }\n\n    render() {\n\n        const { dateRange } = this.props\n        const maxRange = this.getMaxRange()\n\n        return (\n            <Form.Group controlId=\"dateRange\">\n                <Form.Label>Période</Form.Label>\n                <br/>\n                <DateRangePicker\n                    startDate={ dateRange.startDate }\n                    startDateId=\"start_date\"\n                    endDate={ dateRange.endDate }\n                    endDateId=\"end_date\"\n                    onDatesChange={ this.handleChange }\n                    focusedInput={ this.state.focusedInput }\n                    onFocusChange={ this.handleFocus }\n                    isOutsideRange={ date => date < maxRange.minDate || date > maxRange.maxDate }\n                    { ...maxRange }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport BsForm from \"react-bootstrap/Form\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport Zones from \"./Zones\"\nimport Parameter from \"./Parameter\"\nimport DateRange from \"./DateRange\"\n\nexport default class Form extends React.Component {\n\n    render() {\n\n        return (\n            <BsForm>\n                <Row>\n                    <Col md={ 4 }><Zones/></Col>\n                    <Col md={ 4 }><Parameter/></Col>\n                    <Col md={ 4 }><DateRange/></Col>\n                </Row>\n            </BsForm>\n        )\n    }\n}","import React from 'react';\nimport Container from \"react-bootstrap/Container\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport DataContext from \"./DataContext\"\nimport Chart from \"./Chart\"\nimport Form from \"./Form\"\nimport moment from \"moment\"\n\nclass App extends React.Component {\n\n  state = {\n    data : [],\n    zones : [{ value : \"FRA\", label : \"France\" }],\n    dateRange : { startDate : moment(\"2020-03-01\"), endDate : moment() },\n    parameter : { value : \"casConfirmes\", label : \"Nombre de cas confirmés\" },\n    chartHeight : null\n  }\n\n  divChart = React.createRef()\n\n  async fetchData() {\n    const res = await fetch(\"https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.json\")\n    return await res.json()\n  }\n\n  async componentDidMount() {\n    const chartHeight = this.divChart?.current?.getBoundingClientRect().height\n    this.setState({ chartHeight })\n\n    const data = await this.fetchData()\n    this.setState({ data })\n  }\n\n  setKeyValue = (key, value) => this.setState({ [key] : value })\n\n  render() {\n\n    return (\n      <DataContext.Provider\n        value={ { ...this.state, setKeyValue : this.setKeyValue } }\n      >\n        <Container\n          fluid\n          className=\"main-container\"\n        >\n          <Row>\n            <Col>\n              <h3>\n                Chiffres-clés concernant l'épidémie de COVID19 en France\n              </h3>\n              <br/>\n            </Col>\n          </Row>\n          <Row>\n            <Col><Form/><br/></Col>\n          </Row>\n          <div className=\"chart\" ref={ this.divChart }>\n            <Chart/>\n          </div>\n          <div className=\"source\">\n            <small>\n              Source&nbsp;:&nbsp;\n                <a href=\"https://www.data.gouv.fr/fr/datasets/chiffres-cles-concernant-lepidemie-de-covid19-en-france\">\n                https://www.data.gouv.fr/fr/datasets/chiffres-cles-concernant-lepidemie-de-covid19-en-france\n                </a>              \n            </small>\n          </div>\n        </Container>\n      </DataContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'react-dates/initialize';\nimport \"highcharts/css/themes/dark-unica.css\"\n// import \"highcharts/css/themes/sand-signika.css\"\n// import \"highcharts/css/themes/grid-light.css\"\nimport './styles.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}