{"version":3,"sources":["DataContext.js","Chart.js","Departement.js","Parameter.js","DateRange.js","Form.js","App.js","index.js"],"names":["DataContext","React","createContext","withDataContext","Component","props","Consumer","data","metadata","JSON","stringify","this","state","deps","handleChange","setState","Set","map","entry","dep","label","value","Group","controlId","Label","options","getOptions","onChange","isMulti","exclude","parameter","filter","meta","includes","Colonne","Description","startDate","endDate","focusedInput","handleFocus","dates","Number","Date","date_de_passage","date","isNaN","minDate","length","moment","Math","min","maxDate","max","startDateId","endDateId","onDatesChange","onFocusChange","getMaxRange","Form","App","fetch","res","text","csv","rows","split","row","keys","shift","fields","reduce","acc","cur","i","fetchData","fetchMetaData","Provider","Container","fluid","Row","Col","xs","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87341bbe.chunk.js","sourcesContent":["import React from \"react\"\n\nconst DataContext = React.createContext()\n\nexport default DataContext\n\nexport const withDataContext = Component => props => (\n    <DataContext.Consumer>\n        { ({ data, metadata }) => <Component data={ data } metadata={ metadata }/> }\n    </DataContext.Consumer>\n)","import React from \"react\"\n// import Highcharts from \"react-highcharts\"\nimport { withDataContext } from \"./DataContext\"\n\nexport default withDataContext(class Chart extends React.Component {\n\n    render() {\n\n        return (\n            <>\n                <pre>{ JSON.stringify(this.props.metadata, null, 4) }</pre>\n                <pre>{ JSON.stringify(this.props.data, null, 4) }</pre>\n            </>\n        )\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport Select from \"react-select\"\n\nexport default withDataContext(class Departement extends React.Component {\n\n    state = { deps : [] }\n\n    handleChange = deps => this.setState({ deps })\n\n    getOptions() {\n\n        const { data } = this.props\n\n        const arrayUnique = [...new Set(data.map(entry => entry.dep))]\n        \n        return arrayUnique.map(dep => ({ label : dep, value : dep }))\n    }\n\n    render() {\n\n        return (\n            <Form.Group controlId=\"departement\">\n                <Form.Label>Departement</Form.Label>\n                <Select\n                    options={ this.getOptions() }\n                    value={ this.state.deps }\n                    onChange={ this.handleChange }\n                    isMulti\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport Select from \"react-select\"\n\nconst exclude = [\"sursaud_cl_age_corona\", \"dep\", \"date_de_passage\"]\n\nexport default withDataContext(class Parameter extends React.Component {\n\n    state = { parameter : \"\" }\n\n    handleChange = parameter => this.setState({ parameter })\n\n    getOptions() {\n        return this.props.metadata\n            .filter(meta => !exclude.includes(meta.Colonne))\n            .map(meta => ({ label : meta.Description, value : meta.Colonne }))\n    }\n\n    render() {\n        return (\n            <Form.Group controlId=\"parameter\">\n                <Form.Label>Paramètre</Form.Label>\n                <Select\n                    options={ this.getOptions() }\n                    value={ this.state.parameter }\n                    onChange={ this.handleChange }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport { DateRangePicker } from \"react-dates\"\nimport moment from \"moment\"\n\nexport default withDataContext(class DateRange extends React.Component {\n\n    state = {\n        startDate : null,\n        endDate : null,\n        focusedInput : null\n    }\n\n    handleChange = ({ startDate, endDate }) => this.setState({ startDate, endDate })\n\n    handleFocus = focusedInput => this.setState({ focusedInput })\n\n    getMaxRange() {\n\n        const { data } = this.props\n\n        const dates = new Set(data\n            .map(entry => Number(new Date(entry.date_de_passage)))\n            .filter(date => !isNaN(date))\n        )\n        \n        return {\n            minDate : dates.length ? moment(Math.min(...dates)) : moment(),\n            maxDate : dates.length ? moment(Math.max(...dates)) : moment()\n        }\n    }\n\n    render() {\n\n        return (\n            <Form.Group controlId=\"dateRange\">\n                <Form.Label>Période</Form.Label>\n                <br/>\n                <DateRangePicker\n                    startDate={ this.state.startDate }\n                    startDateId=\"start_date\"\n                    endDate={ this.state.endDate }\n                    endDateId=\"end_date\"\n                    onDatesChange={ this.handleChange }\n                    focusedInput={ this.state.focusedInput }\n                    onFocusChange={ this.handleFocus }\n                    { ...this.getMaxRange() }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport BsForm from \"react-bootstrap/Form\"\nimport Departement from \"./Departement\"\nimport Parameter from \"./Parameter\"\nimport DateRange from \"./DateRange\"\n\nexport default class Form extends React.Component {\n\n    render() {\n\n        return (\n            <BsForm>\n                <Departement/>\n                <Parameter/>\n                <DateRange/>\n            </BsForm>\n        )\n    }\n}","import React from 'react';\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport DataContext from \"./DataContext\"\r\nimport Chart from \"./Chart\"\r\nimport Form from \"./Form\"\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    data : [],\r\n    metadata : []\r\n  }\r\n\r\n  async fetchData() {\r\n    const res = await fetch(\"data.csv\")\r\n    const csv = await res.text()\r\n    const rows = csv.split(/[\\n\\r]+/).filter(row => row)\r\n    const keys = rows.shift().split(/\\s*,/)\r\n\r\n    return rows.map(row => {\r\n      const fields = row.split(/\\s*,/)\r\n      return keys.reduce((acc, cur, i) => {\r\n        acc[cur] = fields[i]\r\n        return acc\r\n      }, {})\r\n    })\r\n  }\r\n\r\n  async fetchMetaData() {\r\n    const res = await fetch(\"metadata.csv\")\r\n    const csv = await res.text()\r\n    const rows = csv.split(/[\\n\\r]+/).filter(row => row)\r\n    rows.shift()\r\n    const keys = rows.shift().split(/\\s*;/)\r\n\r\n    return rows.map(row => {\r\n      const fields = row.split(/\\s*;/)\r\n      return keys.reduce((acc, cur, i) => {\r\n        acc[cur] = fields[i]\r\n        return acc\r\n      }, {})\r\n    })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await this.fetchData()\r\n    const metadata = await this.fetchMetaData()\r\n    this.setState({ data, metadata })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DataContext.Provider value={ this.state }>\r\n        <Container fluid>\r\n          <h1>Graphique interactif des données relatives à l'épidémie du covid-19 </h1>\r\n          <Row>\r\n            <Col>\r\n              <Form/>\r\n            </Col>\r\n            <Col xs={ 9 }>\r\n              <Chart/>\r\n            </Col>\r\n          </Row>\r\n          <h6>\r\n            Source&nbsp;:&nbsp;\r\n            <a href=\"https://www.data.gouv.fr/fr/datasets/donnees-relatives-a-lepidemie-du-covid-19/\">\r\n              https://www.data.gouv.fr/fr/datasets/donnees-relatives-a-lepidemie-du-covid-19/\r\n            </a>\r\n          </h6>\r\n        </Container>\r\n      </DataContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport 'react-dates/initialize';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}