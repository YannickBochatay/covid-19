{"version":3,"sources":["DataContext.js","Chart.js","Departement.js","Parameter.js","DateRange.js","Form.js","App.js","index.js"],"names":["DataContext","React","createContext","withDataContext","Component","props","Consumer","context","setSerie","serie","data","name","metadata","find","Colonne","parameter","value","Description","filter","item","dep","deps","moment","date_de_passage","dateRange","startDate","endDate","map","Date","Number","title","text","subtitle","yAxis","xAxis","type","dateTimeLabelFormats","month","year","plotOptions","series","marker","enabled","this","responsive","rules","condition","maxWidth","chartOptions","legend","layout","align","config","setConfig","handleChange","updateSerie","Set","entry","label","Group","controlId","Label","options","getOptions","getSerie","onChange","isMulti","exclude","meta","includes","state","focusedInput","handleFocus","setState","dates","date","isNaN","minDate","size","Math","min","maxDate","max","maxRange","getMaxRange","startDateId","endDateId","onDatesChange","onFocusChange","isOutsideRange","Form","defaultSerie","App","editingSerie","splice","fetch","res","csv","rows","split","row","keys","shift","fields","reduce","acc","cur","i","fetchData","fetchMetaData","Provider","Container","fluid","Row","Col","xs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.707efca5.chunk.js","sourcesContent":["import React from \"react\"\n\nconst DataContext = React.createContext()\n\nexport default DataContext\n\nexport const withDataContext = Component => props => (\n    <DataContext.Consumer>\n        { context => <Component { ...context }/> }\n    </DataContext.Consumer>\n)","import React from \"react\"\nimport Highcharts from \"react-highcharts\"\nimport { withDataContext } from \"./DataContext\"\nimport moment from \"moment\"\n\nexport default withDataContext(class Chart extends React.Component {\n\n    setSerie = serie => {\n        const { data, metadata } = this.props\n\n        return {\n            name : metadata.find(({ Colonne }) => Colonne === serie.parameter?.value)?.Description,\n            data : data\n                    .filter(item => item.dep === serie.deps?.value)\n                    .filter(item => moment(item.date_de_passage) >= serie.dateRange?.startDate)\n                    .filter(item => moment(item.date_de_passage) <= serie.dateRange?.endDate)\n                    .map(item => [\n                        new Date(item.date_de_passage),\n                        Number(item[serie.parameter?.value])\n                    ])\n        }\n    }\n\n    setConfig() {\n\n        return {\n            title: { text: 'Données relatives à l\\'épidémie du covid-19' },\n            subtitle: { text: 'Source : www.data.gouv.fr/fr/datasets/donnees-relatives-a-lepidemie-du-covid-19' },\n            yAxis: {\n                title: { text: 'Nombre de cas' }\n            },\n            xAxis: {\n                type: 'datetime',\n                dateTimeLabelFormats: {\n                    month: '%e. %b',\n                    year: '%b'\n                }\n            },\n            plotOptions: {\n                series: {\n                    marker: {\n                        enabled: true\n                    }\n                }\n            },\n            series: this.props.series.map(this.setSerie),\n            responsive: {\n                rules: [{\n                    condition: {\n                        maxWidth: 500\n                    },\n                    chartOptions: {\n                        legend: {\n                            layout: 'horizontal',\n                            align: 'center'\n                        }\n                    }\n                }]\n            }\n        }\n    }\n\n    render() {\n        return <Highcharts config={ this.setConfig() }/>\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport Select from \"react-select\"\n\nexport default withDataContext(class Departement extends React.Component {\n\n    handleChange = deps => this.props.updateSerie({ deps })\n\n    getOptions() {\n        const { data } = this.props\n        const arrayUnique = [...new Set(data.map(entry => entry.dep))]      \n        return arrayUnique.map(dep => ({ label : dep, value : dep }))\n    }\n\n    render() {\n        return (\n            <Form.Group controlId=\"departement\">\n                <Form.Label>Departement</Form.Label>\n                <Select\n                    options={ this.getOptions() }\n                    value={ this.props.getSerie().deps }\n                    onChange={ this.handleChange }\n                    isMulti={ false }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport Select from \"react-select\"\n\nconst exclude = [\"sursaud_cl_age_corona\", \"dep\", \"date_de_passage\"]\n\nexport default withDataContext(class Parameter extends React.Component {\n\n    handleChange = parameter => this.props.updateSerie({ parameter })\n\n    getOptions() {\n        return this.props.metadata\n            .filter(meta => !exclude.includes(meta.Colonne))\n            .map(meta => ({ label : meta.Description, value : meta.Colonne }))\n    }\n\n    render() {\n        return (\n            <Form.Group controlId=\"parameter\">\n                <Form.Label>Paramètre</Form.Label>\n                <Select\n                    options={ this.getOptions() }\n                    value={ this.props.getSerie().parameter }\n                    onChange={ this.handleChange }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport { DateRangePicker } from \"react-dates\"\nimport moment from \"moment\"\n\nexport default withDataContext(class DateRange extends React.Component {\n\n    state = { focusedInput : null }\n\n    handleChange = dateRange => this.props.updateSerie({ dateRange })\n\n    handleFocus = focusedInput => this.setState({ focusedInput })\n\n    getMaxRange() {\n\n        const { data } = this.props\n\n        const dates = new Set(data\n            .map(entry => Number(new Date(entry.date_de_passage)))\n            .filter(date => !isNaN(date))\n        )\n        \n        return {\n            minDate : dates.size ? moment(Math.min(...dates)) : moment(),\n            maxDate : dates.size ? moment(Math.max(...dates)) : moment()\n        }\n    }\n\n    render() {\n\n        const { dateRange } = this.props.getSerie()\n        const maxRange = this.getMaxRange()\n\n        return (\n            <Form.Group controlId=\"dateRange\">\n                <Form.Label>Période</Form.Label>\n                <br/>\n                <DateRangePicker\n                    startDate={ dateRange.startDate }\n                    startDateId=\"start_date\"\n                    endDate={ dateRange.endDate }\n                    endDateId=\"end_date\"\n                    onDatesChange={ this.handleChange }\n                    focusedInput={ this.state.focusedInput }\n                    onFocusChange={ this.handleFocus }\n                    isOutsideRange={ date => date < maxRange.minDate || date > maxRange.maxDate }\n                    { ...maxRange }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport BsForm from \"react-bootstrap/Form\"\nimport Departement from \"./Departement\"\nimport Parameter from \"./Parameter\"\nimport DateRange from \"./DateRange\"\n\nexport default class Form extends React.Component {\n\n    render() {\n\n        return (\n            <BsForm>\n                <Departement/>\n                <Parameter/>\n                <DateRange/>\n            </BsForm>\n        )\n    }\n}","import React from 'react';\nimport Container from \"react-bootstrap/Container\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport DataContext from \"./DataContext\"\nimport Chart from \"./Chart\"\nimport Form from \"./Form\"\n\nconst defaultSerie = {\n  deps : [],\n  dateRange : { startDate : null, endDate : null },\n  parameter : \"\"\n}\n\nclass App extends React.Component {\n\n  state = {\n    data : [],\n    metadata : [],\n    series : [defaultSerie],\n    editingSerie : 0\n  }\n\n  getSerie = () => {\n    const { series, editingSerie } = this.state\n    \n    return series[editingSerie] || defaultSerie    \n  }\n\n  updateSerie = serie => {\n    const series = [...this.state.series]\n\n    serie = { ...series[this.state.editingSerie], ...serie }\n\n    series.splice(this.state.editingSerie, 1, serie)\n\n    this.setState({ series })\n  }\n\n  async fetchData() {\n    const res = await fetch(\"data.csv\")\n    const csv = await res.text()\n    const rows = csv.split(/[\\n\\r]+/).filter(row => row)\n    const keys = rows.shift().split(/\\s*,/)\n\n    return rows.map(row => {\n      const fields = row.split(/\\s*,/)\n      return keys.reduce((acc, cur, i) => {\n        acc[cur] = fields[i]\n        return acc\n      }, {})\n    })\n  }\n\n  async fetchMetaData() {\n    const res = await fetch(\"metadata.csv\")\n    const csv = await res.text()\n    const rows = csv.split(/[\\n\\r]+/).filter(row => row)\n    rows.shift()\n    const keys = rows.shift().split(/\\s*;/)\n\n    return rows.map(row => {\n      const fields = row.split(/\\s*;/)\n      return keys.reduce((acc, cur, i) => {\n        acc[cur] = fields[i]\n        return acc\n      }, {})\n    })\n  }\n\n  async componentDidMount() {\n    const data = await this.fetchData()\n    const metadata = await this.fetchMetaData()\n    this.setState({ data, metadata })\n  }\n\n  render() {\n\n    return (\n      <DataContext.Provider\n        value={ {\n          ...this.state,\n          getSerie : this.getSerie,\n          updateSerie : this.updateSerie\n        } }>\n        <Container fluid>\n          <Row>\n            <Col>\n              <Form/>\n            </Col>\n            <Col xs={ 9 }>\n              <Chart/>\n            </Col>\n          </Row>\n        </Container>\n      </DataContext.Provider>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'react-dates/initialize';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}