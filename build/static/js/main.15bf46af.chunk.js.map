{"version":3,"sources":["DataContext.js","Parameter.js","Chart.js","Zones.js","DateRange.js","Scale.js","Form.js","Twitter.js","App.js","index.js"],"names":["DataContext","React","createContext","withDataContext","Component","props","Consumer","context","options","label","value","handleChange","parameter","setKeyValue","Group","controlId","Label","this","onChange","setSeries","data","zones","dateRange","map","zone","dataSources","filter","item","code","moment","date","startDate","endDate","Number","reduce","sourceType","push","sourceTypes","Object","keys","maxLength","Math","max","length","bestSource","find","bestData","name","Date","param","title","text","chart","width","height","chartHeight","yAxis","type","scale","xAxis","plotOptions","series","marker","enabled","credits","legend","itemStyle","color","itemHoverStyle","highcharts","Highcharts","setConfig","entry","i","arr","findIndex","el","nom","sort","split","getOptions","isMulti","isClearable","state","focusedInput","handleFocus","setState","dates","Set","isNaN","minDate","size","min","startOf","maxDate","endOf","maxRange","getMaxRange","startDateId","endDateId","onDatesChange","onFocusChange","isOutsideRange","ToggleButtonGroup","ToggleButton","variant","Form","Row","Col","md","href","className","viewBox","fill","d","App","isFetching","fetchError","divChart","createRef","key","fetch","res","json","current","getBoundingClientRect","fetchData","Provider","Container","fluid","ref","Alert","Twitter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15bf46af.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst DataContext = React.createContext()\r\n\r\nexport default DataContext\r\n\r\nexport const withDataContext = Component => props => (\r\n    <DataContext.Consumer>\r\n        { context => <Component { ...context }/> }\r\n    </DataContext.Consumer>\r\n)","import React from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { withDataContext } from \"./DataContext\"\r\nimport Select from \"react-select\"\r\n\r\nexport const options = [{\r\n    label : \"Nombre de cas confirmés\",\r\n    value : \"casConfirmes\"\r\n}, {\r\n    label : \"Nombre d'hospitalisations\",\r\n    value : \"hospitalises\"\r\n}, {\r\n    label : \"Nombre d'admissions en réanimation\",\r\n    value : \"reanimation\"\r\n}, {\r\n    label : \"Nombre de décès\",\r\n    value : \"deces\"\r\n}]\r\n\r\nexport default withDataContext(class Parameter extends React.Component {\r\n\r\n    handleChange = parameter => this.props.setKeyValue(\"parameter\", parameter)\r\n\r\n    render() {\r\n        return (\r\n            <Form.Group controlId=\"parameter\">\r\n                <Form.Label>Paramètre</Form.Label>\r\n                <Select\r\n                    value={ this.props.parameter }\r\n                    options={ options }\r\n                    onChange={ this.handleChange }\r\n                />\r\n            </Form.Group>\r\n        )\r\n    }\r\n})","import React from \"react\"\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport { withDataContext } from \"./DataContext\"\r\nimport { options } from \"./Parameter\"\r\nimport moment from \"moment\"\r\n\r\nexport default withDataContext(class Chart extends React.Component {\r\n\r\n    setSeries = () => {\r\n        const { data, zones, dateRange, parameter } = this.props\r\n        \r\n        return zones?.map(zone => {\r\n\r\n            const dataZone = data\r\n                .filter(item => item.code === zone?.value)\r\n                .filter(item => moment(item.date) >= dateRange?.startDate)\r\n                .filter(item => moment(item.date) <= dateRange?.endDate)\r\n                .filter(item => Number(item[parameter?.value]))\r\n\r\n            const dataSources = dataZone.reduce((map, item) => {\r\n                if (!(item.sourceType in map)) map[item.sourceType] = []\r\n                map[item.sourceType].push(item)\r\n                return map\r\n            }, {})\r\n\r\n            const sourceTypes = Object.keys(dataSources)\r\n            const maxLength = Math.max(...sourceTypes.map(sourceType => dataSources[sourceType].length))\r\n            const bestSource = sourceTypes.find(sourceType => dataSources[sourceType].length === maxLength)\r\n            const bestData = dataSources[bestSource] || []\r\n\r\n            return {\r\n                name :  zone?.label + \" (données \" + bestSource + \")\",\r\n                data : bestData.map(item => [Number(new Date(item.date)), Number(item[parameter?.value])] )\r\n            }\r\n        })\r\n    }\r\n\r\n    setConfig() {\r\n\r\n        const param = options.find(({ value }) => value === this.props.parameter?.value)?.label\r\n\r\n        return {\r\n            title: { text: \"\" },\r\n            chart: { width : null, height : this.props.chartHeight },\r\n            yAxis: {\r\n                title: { text: param },\r\n                type: this.props.scale\r\n            },\r\n            xAxis: {\r\n                type: 'datetime'\r\n            },\r\n            plotOptions: {\r\n                series: {\r\n                    marker: {\r\n                        enabled: true\r\n                    }\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            legend: {\r\n                itemStyle: {\r\n                    color: '#bbb'\r\n                },\r\n                itemHoverStyle:{\r\n                    color: '#fff'\r\n                }\r\n            },\r\n            series: this.setSeries()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <HighchartsReact\r\n                highcharts={ Highcharts }\r\n                options={ this.setConfig() }\r\n                { ...this.props }\r\n            />\r\n        )\r\n    }\r\n})","import React from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { withDataContext } from \"./DataContext\"\r\nimport Select from \"react-select\"\r\n\r\nexport default withDataContext(class Zones extends React.Component {\r\n\r\n    handleChange = zones => this.props.setKeyValue(\"zones\", zones)\r\n\r\n    getOptions() {\r\n        const { data } = this.props\r\n        const sep = \" - \"\r\n        const arrayUnique = data\r\n            .filter((entry, i, arr) => arr.findIndex(el => el.nom === entry.nom) === i)\r\n            .map(entry => entry.nom + sep + entry.code)\r\n        \r\n        return arrayUnique.sort().map(zone => {\r\n            const [label, value] = zone.split(sep)\r\n            return { label, value }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Form.Group controlId=\"zone\">\r\n                <Form.Label>Zones</Form.Label>\r\n                <Select\r\n                    options={ this.getOptions() }\r\n                    value={ this.props.zones }\r\n                    onChange={ this.handleChange }\r\n                    isMulti\r\n                    isClearable={ false }\r\n                />\r\n            </Form.Group>\r\n        )\r\n    }\r\n})","import React from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { withDataContext } from \"./DataContext\"\r\nimport { DateRangePicker } from \"react-dates\"\r\nimport moment from \"moment\"\r\n\r\nexport default withDataContext(class DateRange extends React.Component {\r\n\r\n    state = { focusedInput : null }\r\n\r\n    handleChange = dateRange => this.props.setKeyValue(\"dateRange\", dateRange)\r\n\r\n    handleFocus = focusedInput => this.setState({ focusedInput })\r\n\r\n    getMaxRange() {\r\n\r\n        const { data } = this.props\r\n\r\n        const dates = new Set(data\r\n            .map(entry => Number(new Date(entry.date)))\r\n            .filter(date => !isNaN(date))\r\n        )\r\n        \r\n        return {\r\n            minDate : moment(dates.size ? Math.min(...dates) : null).startOf(\"day\"),\r\n            maxDate : moment(dates.size ? Math.max(...dates) : null).endOf(\"day\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { dateRange } = this.props\r\n        const maxRange = this.getMaxRange()\r\n\r\n        return (\r\n            <Form.Group controlId=\"dateRange\">\r\n                <Form.Label>Période</Form.Label>\r\n                <br/>\r\n                <DateRangePicker\r\n                    startDate={ dateRange.startDate }\r\n                    startDateId=\"start_date\"\r\n                    endDate={ dateRange.endDate }\r\n                    endDateId=\"end_date\"\r\n                    onDatesChange={ this.handleChange }\r\n                    focusedInput={ this.state.focusedInput }\r\n                    onFocusChange={ this.handleFocus }\r\n                    isOutsideRange={ date => date < maxRange.minDate || date > maxRange.maxDate }\r\n                    { ...maxRange }\r\n                />\r\n            </Form.Group>\r\n        )\r\n    }\r\n})","import React from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { withDataContext } from \"./DataContext\"\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\"\r\nimport ToggleButton  from \"react-bootstrap/ToggleButton\"\r\n\r\nexport default withDataContext(class Scale extends React.Component {\r\n\r\n    handleChange = scale => this.props.setKeyValue(\"scale\", scale)\r\n\r\n    render() {\r\n        return (\r\n            <Form.Group controlId=\"scale\">\r\n                <Form.Label>Échelle</Form.Label>\r\n                <br/>\r\n                <ToggleButtonGroup\r\n                    type=\"radio\"\r\n                    name=\"scale\"\r\n                    value={ this.props.scale}\r\n                    onChange={ this.handleChange }\r\n                >\r\n                    <ToggleButton variant=\"light\" value=\"linear\">linéaire</ToggleButton>\r\n                    <ToggleButton variant=\"light\" value=\"logarithmic\">logarithmique</ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Form.Group>\r\n        )\r\n    }\r\n})","import React from \"react\"\r\nimport BsForm from \"react-bootstrap/Form\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Zones from \"./Zones\"\r\nimport Parameter from \"./Parameter\"\r\nimport DateRange from \"./DateRange\"\r\nimport Scale from \"./Scale\"\r\n\r\nexport default class Form extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <BsForm>\r\n                <Row>\r\n                    <Col md={ 3 }><Zones/></Col>\r\n                    <Col md={ 3 }><Parameter/></Col>\r\n                    <Col md={ 3 }><DateRange/></Col>\r\n                    <Col md={ 3 }><Scale/></Col>\r\n                </Row>\r\n            </BsForm>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\n\r\nexport default () => (\r\n    <a href=\"https://twitter.com/YBotochay\" className=\"twitter\">\r\n        Suivez-moi sur&nbsp;\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n            <path\r\n                fill=\"white\"\r\n                d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"\r\n            />\r\n        </svg>\r\n    </a>\r\n)","import React from 'react';\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Alert from \"react-bootstrap/Alert\"\r\nimport Spinner from 'reactjs-simple-spinner'\r\nimport DataContext from \"./DataContext\"\r\nimport Chart from \"./Chart\"\r\nimport Form from \"./Form\"\r\nimport Twitter from \"./Twitter\"\r\nimport moment from \"moment\"\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    data : [],\r\n    zones : [{ value : \"FRA\", label : \"France\" }],\r\n    dateRange : { startDate : moment(\"2020-03-01\"), endDate : moment() },\r\n    parameter : { value : \"casConfirmes\", label : \"Nombre de cas confirmés\" },\r\n    scale : \"linear\",\r\n    chartHeight : null,\r\n    isFetching : false,\r\n    fetchError : null\r\n  }\r\n\r\n  divChart = React.createRef()\r\n\r\n  async fetchData() {\r\n    const res = await fetch(\"https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.json\")\r\n    return await res.json()\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const chartHeight = this.divChart?.current?.getBoundingClientRect().height\r\n    this.setState({ chartHeight, isFetching : true })\r\n\r\n    try {\r\n      const data = await this.fetchData()\r\n      this.setState({ data, isFetching : false })\r\n    } catch (e) {\r\n      this.setState({\r\n        fetchError : \"Problème de chargement des données\",\r\n        isFetching : false\r\n      })\r\n    }\r\n  }\r\n\r\n  setKeyValue = (key, value) => this.setState({ [key] : value })\r\n\r\n  render() {\r\n\r\n    const { isFetching, fetchError } = this.state\r\n\r\n    return (\r\n      <DataContext.Provider\r\n        value={ { ...this.state, setKeyValue : this.setKeyValue } }\r\n      >\r\n        <Container\r\n          fluid\r\n          className=\"main-container\"\r\n        >\r\n          <Row>\r\n            <Col>\r\n              <h3>\r\n                Chiffres-clés concernant l'épidémie de COVID19 en France\r\n              </h3>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col><Form/><br/></Col>\r\n          </Row>\r\n          <div className=\"chart\" ref={ this.divChart }>\r\n            { fetchError && <Alert variant=\"danger\">{ fetchError }</Alert> }\r\n            { isFetching ? <Spinner size=\"large\"/> : null }\r\n            { !fetchError && !isFetching ? <Chart/> : null }\r\n          </div>\r\n          <div className=\"footer\">\r\n            <Twitter/>\r\n            <small className=\"source\">\r\n              Source&nbsp;:&nbsp;\r\n                <a href=\"https://www.data.gouv.fr/fr/datasets/chiffres-cles-concernant-lepidemie-de-covid19-en-france\">\r\n                https://www.data.gouv.fr/fr/datasets/chiffres-cles-concernant-lepidemie-de-covid19-en-france\r\n                </a>              \r\n            </small>\r\n          </div>\r\n        </Container>\r\n      </DataContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport 'react-dates/initialize';\r\nimport \"highcharts/css/themes/dark-unica.css\"\r\n// import \"highcharts/css/themes/sand-signika.css\"\r\n// import \"highcharts/css/themes/grid-light.css\"\r\nimport './styles.css'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}