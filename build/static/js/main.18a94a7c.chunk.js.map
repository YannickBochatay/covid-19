{"version":3,"sources":["DataContext.js","Parameter.js","Chart.js","Zones.js","DateRange.js","Scale.js","Form.js","Twitter.js","App.js","serviceWorker.js","index.js"],"names":["DataContext","React","createContext","withDataContext","Component","props","Consumer","context","options","label","value","handleChange","parameter","setKeyValue","Group","controlId","Label","this","onChange","setSeries","data","zones","dateRange","map","zone","dataSources","filter","item","code","moment","date","startDate","endDate","Number","reduce","sourceType","push","sourceTypes","Object","keys","maxLength","Math","max","length","bestSource","find","bestData","name","Date","param","title","text","chart","width","height","chartHeight","yAxis","type","scale","xAxis","plotOptions","series","marker","enabled","credits","legend","itemStyle","color","itemHoverStyle","highcharts","Highcharts","setConfig","entry","i","arr","findIndex","el","nom","sort","split","getOptions","isMulti","isClearable","state","focusedInput","handleFocus","setState","dates","Set","isNaN","minDate","size","min","startOf","maxDate","endOf","maxRange","getMaxRange","startDateId","endDateId","onDatesChange","onFocusChange","isOutsideRange","ToggleButtonGroup","ToggleButton","variant","Form","Row","Col","md","href","className","viewBox","fill","d","App","isFetching","fetchError","divChart","createRef","key","fetch","res","json","current","getBoundingClientRect","fetchData","Provider","Container","fluid","ref","Alert","Twitter","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.18a94a7c.chunk.js","sourcesContent":["import React from \"react\"\n\nconst DataContext = React.createContext()\n\nexport default DataContext\n\nexport const withDataContext = Component => props => (\n    <DataContext.Consumer>\n        { context => <Component { ...context }/> }\n    </DataContext.Consumer>\n)","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport Select from \"react-select\"\n\nexport const options = [{\n    label : \"Nombre de cas confirmés\",\n    value : \"casConfirmes\"\n}, {\n    label : \"Nombre d'hospitalisations\",\n    value : \"hospitalises\"\n}, {\n    label : \"Nombre d'admissions en réanimation\",\n    value : \"reanimation\"\n}, {\n    label : \"Nombre de décès\",\n    value : \"deces\"\n}]\n\nexport default withDataContext(class Parameter extends React.Component {\n\n    handleChange = parameter => this.props.setKeyValue(\"parameter\", parameter)\n\n    render() {\n        return (\n            <Form.Group controlId=\"parameter\">\n                <Form.Label>Paramètre</Form.Label>\n                <Select\n                    value={ this.props.parameter }\n                    options={ options }\n                    onChange={ this.handleChange }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport { withDataContext } from \"./DataContext\"\nimport { options } from \"./Parameter\"\nimport moment from \"moment\"\n\nexport default withDataContext(class Chart extends React.Component {\n\n    setSeries = () => {\n        const { data, zones, dateRange, parameter } = this.props\n        \n        return zones?.map(zone => {\n\n            const dataZone = data\n                .filter(item => item.code === zone?.value)\n                .filter(item => moment(item.date) >= dateRange?.startDate)\n                .filter(item => moment(item.date) <= dateRange?.endDate)\n                .filter(item => Number(item[parameter?.value]))\n\n            const dataSources = dataZone.reduce((map, item) => {\n                if (!(item.sourceType in map)) map[item.sourceType] = []\n                map[item.sourceType].push(item)\n                return map\n            }, {})\n\n            const sourceTypes = Object.keys(dataSources)\n            const maxLength = Math.max(...sourceTypes.map(sourceType => dataSources[sourceType].length))\n            const bestSource = sourceTypes.find(sourceType => dataSources[sourceType].length === maxLength)\n            const bestData = dataSources[bestSource] || []\n\n            return {\n                name :  zone?.label + \" (données \" + bestSource + \")\",\n                data : bestData.map(item => [Number(new Date(item.date)), Number(item[parameter?.value])] )\n            }\n        })\n    }\n\n    setConfig() {\n\n        const param = options.find(({ value }) => value === this.props.parameter?.value)?.label\n\n        return {\n            title: { text: \"\" },\n            chart: { width : null, height : this.props.chartHeight },\n            yAxis: {\n                title: { text: param },\n                type: this.props.scale\n            },\n            xAxis: {\n                type: 'datetime'\n            },\n            plotOptions: {\n                series: {\n                    marker: {\n                        enabled: true\n                    }\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            legend: {\n                itemStyle: {\n                    color: '#bbb'\n                },\n                itemHoverStyle:{\n                    color: '#fff'\n                }\n            },\n            series: this.setSeries()\n        }\n    }\n\n    render() {\n        return (\n            <HighchartsReact\n                highcharts={ Highcharts }\n                options={ this.setConfig() }\n                { ...this.props }\n            />\n        )\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport Select from \"react-select\"\n\nexport default withDataContext(class Zones extends React.Component {\n\n    handleChange = zones => this.props.setKeyValue(\"zones\", zones)\n\n    getOptions() {\n        const { data } = this.props\n        const sep = \" - \"\n        const arrayUnique = data\n            .filter((entry, i, arr) => arr.findIndex(el => el.nom === entry.nom) === i)\n            .map(entry => entry.nom + sep + entry.code)\n        \n        return arrayUnique.sort().map(zone => {\n            const [label, value] = zone.split(sep)\n            return { label, value }\n        })\n    }\n\n    render() {\n\n        return (\n            <Form.Group controlId=\"zone\">\n                <Form.Label>Zones</Form.Label>\n                <Select\n                    options={ this.getOptions() }\n                    value={ this.props.zones }\n                    onChange={ this.handleChange }\n                    isMulti\n                    isClearable={ false }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport { DateRangePicker } from \"react-dates\"\nimport moment from \"moment\"\n\nexport default withDataContext(class DateRange extends React.Component {\n\n    state = { focusedInput : null }\n\n    handleChange = dateRange => this.props.setKeyValue(\"dateRange\", dateRange)\n\n    handleFocus = focusedInput => this.setState({ focusedInput })\n\n    getMaxRange() {\n\n        const { data } = this.props\n\n        const dates = new Set(data\n            .map(entry => Number(new Date(entry.date)))\n            .filter(date => !isNaN(date))\n        )\n        \n        return {\n            minDate : moment(dates.size ? Math.min(...dates) : null).startOf(\"day\"),\n            maxDate : moment(dates.size ? Math.max(...dates) : null).endOf(\"day\")\n        }\n    }\n\n    render() {\n\n        const { dateRange } = this.props\n        const maxRange = this.getMaxRange()\n\n        return (\n            <Form.Group controlId=\"dateRange\">\n                <Form.Label>Période</Form.Label>\n                <br/>\n                <DateRangePicker\n                    startDate={ dateRange.startDate }\n                    startDateId=\"start_date\"\n                    endDate={ dateRange.endDate }\n                    endDateId=\"end_date\"\n                    onDatesChange={ this.handleChange }\n                    focusedInput={ this.state.focusedInput }\n                    onFocusChange={ this.handleFocus }\n                    isOutsideRange={ date => date < maxRange.minDate || date > maxRange.maxDate }\n                    { ...maxRange }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\"\nimport ToggleButton  from \"react-bootstrap/ToggleButton\"\n\nexport default withDataContext(class Scale extends React.Component {\n\n    handleChange = scale => this.props.setKeyValue(\"scale\", scale)\n\n    render() {\n        return (\n            <Form.Group controlId=\"scale\">\n                <Form.Label>Échelle</Form.Label>\n                <br/>\n                <ToggleButtonGroup\n                    type=\"radio\"\n                    name=\"scale\"\n                    value={ this.props.scale}\n                    onChange={ this.handleChange }\n                >\n                    <ToggleButton variant=\"light\" value=\"linear\">linéaire</ToggleButton>\n                    <ToggleButton variant=\"light\" value=\"logarithmic\">logarithmique</ToggleButton>\n                </ToggleButtonGroup>\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport BsForm from \"react-bootstrap/Form\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport Zones from \"./Zones\"\nimport Parameter from \"./Parameter\"\nimport DateRange from \"./DateRange\"\nimport Scale from \"./Scale\"\n\nexport default class Form extends React.Component {\n\n    render() {\n\n        return (\n            <BsForm>\n                <Row>\n                    <Col md={ 3 }><Zones/></Col>\n                    <Col md={ 3 }><Parameter/></Col>\n                    <Col md={ 3 }><DateRange/></Col>\n                    <Col md={ 3 }><Scale/></Col>\n                </Row>\n            </BsForm>\n        )\n    }\n}","import React from \"react\"\n\nexport default () => (\n    <a href=\"https://twitter.com/YBotochay\" className=\"twitter\">\n        Suivez-moi sur&nbsp;\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path\n                fill=\"white\"\n                d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"\n            />\n        </svg>\n    </a>\n)","import React from 'react';\nimport Container from \"react-bootstrap/Container\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport Alert from \"react-bootstrap/Alert\"\nimport Spinner from 'reactjs-simple-spinner'\nimport DataContext from \"./DataContext\"\nimport Chart from \"./Chart\"\nimport Form from \"./Form\"\nimport Twitter from \"./Twitter\"\nimport moment from \"moment\"\n\nclass App extends React.Component {\n\n  state = {\n    data : [],\n    zones : [{ value : \"FRA\", label : \"France\" }],\n    dateRange : { startDate : moment(\"2020-03-01\"), endDate : moment() },\n    parameter : { value : \"casConfirmes\", label : \"Nombre de cas confirmés\" },\n    scale : \"linear\",\n    chartHeight : null,\n    isFetching : false,\n    fetchError : null\n  }\n\n  divChart = React.createRef()\n\n  async fetchData() {\n    const res = await fetch(\"https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.json\")\n    return await res.json()\n  }\n\n  async componentDidMount() {\n    const chartHeight = this.divChart?.current?.getBoundingClientRect().height\n    this.setState({ chartHeight, isFetching : true })\n\n    try {\n      const data = await this.fetchData()\n      this.setState({ data, isFetching : false })\n    } catch (e) {\n      this.setState({\n        fetchError : \"Problème de chargement des données\",\n        isFetching : false\n      })\n    }\n  }\n\n  setKeyValue = (key, value) => this.setState({ [key] : value })\n\n  render() {\n\n    const { isFetching, fetchError } = this.state\n\n    return (\n      <DataContext.Provider\n        value={ { ...this.state, setKeyValue : this.setKeyValue } }\n      >\n        <Container\n          fluid\n          className=\"main-container\"\n        >\n          <Row>\n            <Col>\n              <h3>\n                Chiffres-clés concernant l'épidémie de COVID19 en France\n              </h3>\n            </Col>\n          </Row>\n          <Row>\n            <Col><Form/><br/></Col>\n          </Row>\n          <div className=\"chart\" ref={ this.divChart }>\n            { fetchError && <Alert variant=\"danger\">{ fetchError }</Alert> }\n            { isFetching ? <Spinner size=\"large\"/> : null }\n            { !fetchError && !isFetching ? <Chart/> : null }\n          </div>\n          <div className=\"footer\">\n            <Twitter/>\n            <small className=\"source\">\n              Source&nbsp;:&nbsp;\n                <a href=\"https://www.data.gouv.fr/fr/datasets/chiffres-cles-concernant-lepidemie-de-covid19-en-france\">\n                https://www.data.gouv.fr/fr/datasets/chiffres-cles-concernant-lepidemie-de-covid19-en-france\n                </a>              \n            </small>\n          </div>\n        </Container>\n      </DataContext.Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'react-dates/initialize';\nimport \"highcharts/css/themes/dark-unica.css\"\nimport './styles.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()"],"sourceRoot":""}