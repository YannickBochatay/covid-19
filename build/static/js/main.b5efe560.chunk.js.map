{"version":3,"sources":["DataContext.js","Parameter.js","Chart.js","Zones.js","DateRange.js","Form.js","App.js","index.js"],"names":["DataContext","React","createContext","withDataContext","Component","props","Consumer","context","options","label","value","handleChange","parameter","setKeyValue","Group","controlId","Label","this","onChange","setSeries","data","zones","dateRange","map","zone","name","filter","item","code","moment","date","startDate","endDate","Number","i","arr","findIndex","el","Date","title","text","find","yAxis","xAxis","type","plotOptions","series","marker","enabled","credits","config","setConfig","entry","nom","sort","split","getOptions","isMulti","isClearable","state","focusedInput","handleFocus","setState","dates","Set","isNaN","minDate","size","Math","min","startOf","maxDate","max","endOf","maxRange","getMaxRange","startDateId","endDateId","onDatesChange","onFocusChange","isOutsideRange","Form","Row","Col","md","App","key","fetch","res","json","fetchData","Provider","Container","fluid","style","display","flexDirection","height","textAlign","flex","position","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5efe560.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst DataContext = React.createContext()\r\n\r\nexport default DataContext\r\n\r\nexport const withDataContext = Component => props => (\r\n    <DataContext.Consumer>\r\n        { context => <Component { ...context }/> }\r\n    </DataContext.Consumer>\r\n)","import React from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { withDataContext } from \"./DataContext\"\r\nimport Select from \"react-select\"\r\n\r\nexport const options = [{\r\n    label : \"Nombre de cas confirmés\",\r\n    value : \"casConfirmes\"\r\n}, {\r\n    label : \"Nombre d'hospitalisations'\",\r\n    value : \"hospitalises\"\r\n}, {\r\n    label : \"Nombre de décès\",\r\n    value : \"deces\"\r\n}]\r\n\r\nexport default withDataContext(class Parameter extends React.Component {\r\n\r\n    handleChange = parameter => this.props.setKeyValue(\"parameter\", parameter)\r\n\r\n    render() {\r\n        return (\r\n            <Form.Group controlId=\"parameter\">\r\n                <Form.Label>Paramètre</Form.Label>\r\n                <Select\r\n                    value={ this.props.parameter }\r\n                    options={ options }\r\n                    onChange={ this.handleChange }\r\n                />\r\n            </Form.Group>\r\n        )\r\n    }\r\n})","import React from \"react\"\r\nimport Highcharts from \"react-highcharts\"\r\nimport { withDataContext } from \"./DataContext\"\r\nimport { options } from \"./Parameter\"\r\nimport moment from \"moment\"\r\n\r\nexport default withDataContext(class Chart extends React.Component {\r\n\r\n    setSeries = () => {\r\n        const { data, zones, dateRange, parameter } = this.props\r\n        \r\n        return zones?.map(zone => {            \r\n            return {\r\n                name :  zone?.label,\r\n                data : data\r\n                        .filter(item => item.code === zone?.value)\r\n                        .filter(item => moment(item.date) >= dateRange?.startDate)\r\n                        .filter(item => moment(item.date) <= dateRange?.endDate)\r\n                        .filter(item => Number(item[parameter?.value]))\r\n                        .filter((item, i, arr) => arr.findIndex(el => el.date === item.date) === i)\r\n                        .map(item => [\r\n                            Number(new Date(item.date)),\r\n                            Number(item[parameter?.value])\r\n                        ])\r\n            }\r\n        })\r\n    }\r\n\r\n    setConfig() {\r\n\r\n        const param = options.find(({ value }) => value === this.props.parameter?.value)?.label\r\n\r\n        return {\r\n            title: { text: param },\r\n            yAxis: {\r\n                title: { text: 'Nombre de cas' }\r\n            },\r\n            xAxis: {\r\n                type: 'datetime'\r\n            },\r\n            plotOptions: {\r\n                series: {\r\n                    marker: {\r\n                        enabled: true\r\n                    }\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            series: this.setSeries()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Highcharts config={ this.setConfig() } { ...this.props }/>\r\n    }\r\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport Select from \"react-select\"\n\nexport default withDataContext(class Zones extends React.Component {\n\n    handleChange = zones => this.props.setKeyValue(\"zones\", zones)\n\n    getOptions() {\n        const { data } = this.props\n        const sep = \" - \"\n        const arrayUnique = data\n            .filter((entry, i, arr) => arr.findIndex(el => el.nom === entry.nom) === i)\n            .map(entry => entry.nom + sep + entry.code)\n        \n        return arrayUnique.sort().map(zone => {\n            const [label, value] = zone.split(sep)\n            return { label, value }\n        })\n    }\n\n    render() {\n\n        return (\n            <Form.Group controlId=\"zone\">\n                <Form.Label>Zones</Form.Label>\n                <Select\n                    options={ this.getOptions() }\n                    value={ this.props.zones }\n                    onChange={ this.handleChange }\n                    isMulti\n                    isClearable={ false }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { withDataContext } from \"./DataContext\"\r\nimport { DateRangePicker } from \"react-dates\"\r\nimport moment from \"moment\"\r\n\r\nexport default withDataContext(class DateRange extends React.Component {\r\n\r\n    state = { focusedInput : null }\r\n\r\n    handleChange = dateRange => this.props.setKeyValue(\"dateRange\", dateRange)\r\n\r\n    handleFocus = focusedInput => this.setState({ focusedInput })\r\n\r\n    getMaxRange() {\r\n\r\n        const { data } = this.props\r\n\r\n        const dates = new Set(data\r\n            .map(entry => Number(new Date(entry.date)))\r\n            .filter(date => !isNaN(date))\r\n        )\r\n        \r\n        return {\r\n            minDate : moment(dates.size ? Math.min(...dates) : null).startOf(\"day\"),\r\n            maxDate : moment(dates.size ? Math.max(...dates) : null).endOf(\"day\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { dateRange } = this.props\r\n        const maxRange = this.getMaxRange()\r\n\r\n        return (\r\n            <Form.Group controlId=\"dateRange\">\r\n                <Form.Label>Période</Form.Label>\r\n                <br/>\r\n                <DateRangePicker\r\n                    startDate={ dateRange.startDate }\r\n                    startDateId=\"start_date\"\r\n                    endDate={ dateRange.endDate }\r\n                    endDateId=\"end_date\"\r\n                    onDatesChange={ this.handleChange }\r\n                    focusedInput={ this.state.focusedInput }\r\n                    onFocusChange={ this.handleFocus }\r\n                    isOutsideRange={ date => date < maxRange.minDate || date > maxRange.maxDate }\r\n                    { ...maxRange }\r\n                />\r\n            </Form.Group>\r\n        )\r\n    }\r\n})","import React from \"react\"\r\nimport BsForm from \"react-bootstrap/Form\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Zones from \"./Zones\"\r\nimport Parameter from \"./Parameter\"\r\nimport DateRange from \"./DateRange\"\r\n\r\nexport default class Form extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <BsForm>\r\n                <Row>\r\n                    <Col md={ 4 }><Zones/></Col>\r\n                    <Col md={ 4 }><Parameter/></Col>\r\n                    <Col md={ 4 }><DateRange/></Col>\r\n                </Row>\r\n            </BsForm>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport DataContext from \"./DataContext\"\r\nimport Chart from \"./Chart\"\r\nimport Form from \"./Form\"\r\nimport moment from \"moment\"\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    data : [],\r\n    zones : [{ value : \"FRA\", label : \"France\" }],\r\n    dateRange : { startDate : moment(\"2020-02-15\"), endDate : moment() },\r\n    parameter : { value : \"casConfirmes\", label : \"Nombre de cas confirmés\" }\r\n  }\r\n\r\n  async fetchData() {\r\n    const res = await fetch(\"https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.json\")\r\n    return await res.json()\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await this.fetchData()\r\n    this.setState({ data })\r\n  }\r\n\r\n  setKeyValue = (key, value) => this.setState({ [key] : value })\r\n\r\n  render() {\r\n\r\n    return (\r\n      <DataContext.Provider\r\n        value={ { ...this.state, setKeyValue : this.setKeyValue } }\r\n      >\r\n        <Container fluid style={ { display : \"flex\", flexDirection : \"column\", height : \"100vh\" } }>\r\n          <Row>\r\n            <Col>\r\n              <h3 style={ { textAlign : \"center\" } }>\r\n                Chiffres-clés concernant l'épidémie de COVID19 en France\r\n              </h3>\r\n              <br/>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col><Form/><br/></Col>\r\n            </Row>\r\n          <Row style={ { flex : 1, position : \"relative\" } }>\r\n            <Col>\r\n              <Chart style={ { height : \"100%\" } }/>\r\n            </Col>\r\n          </Row>\r\n          <div style={ { textAlign : \"right\" } }>\r\n            <small>\r\n              Source&nbsp;:&nbsp;\r\n                <a href=\"https://www.data.gouv.fr/fr/datasets/chiffres-cles-concernant-lepidemie-de-covid19-en-france\">\r\n                https://www.data.gouv.fr/fr/datasets/chiffres-cles-concernant-lepidemie-de-covid19-en-france\r\n                </a>              \r\n            </small>\r\n          </div>\r\n        </Container>\r\n      </DataContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport 'react-dates/initialize';\r\nimport './styles.css'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}